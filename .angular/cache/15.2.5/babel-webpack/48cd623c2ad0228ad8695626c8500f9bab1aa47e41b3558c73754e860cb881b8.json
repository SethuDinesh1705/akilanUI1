{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, Host, ContentChildren, NgModule } from '@angular/core';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge, Subscription, EMPTY } from 'rxjs';\nimport { filter, startWith, take, distinctUntilChanged } from 'rxjs/operators';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey, HOME, END } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) {\n  return {\n    collapsedHeight: a0,\n    expandedHeight: a1\n  };\n};\nconst _c4 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n  /**\n   * Animation that rotates the indicator arrow.\n   */\n  indicatorRotate: trigger('indicatorRotate', [state('collapsed, void', style({\n    transform: 'rotate(0deg)'\n  })), state('expanded', style({\n    transform: 'rotate(180deg)'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n  /**\n   * Animation that expands and collapses the panel header height.\n   */\n  expansionHeaderHeight: trigger('expansionHeight', [state('collapsed, void', style({\n    height: '{{collapsedHeight}}'\n  }), {\n    params: {\n      collapsedHeight: '48px'\n    }\n  }), state('expanded', style({\n    height: '{{expandedHeight}}'\n  }), {\n    params: {\n      expandedHeight: '64px'\n    }\n  }), transition('expanded <=> collapsed, void => collapsed', group([query('@indicatorRotate', animateChild(), {\n    optional: true\n  }), animate(EXPANSION_PANEL_ANIMATION_TIMING)]))]),\n  /**\n   * Animation that expands and collapses the panel content.\n   */\n  bodyExpansion: trigger('bodyExpansion', [state('collapsed, void', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('expanded', style({\n    height: '*',\n    visibility: 'visible'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n  /**\n   * @param {?} _template\n   */\n  constructor(_template) {\n    this._template = _template;\n  }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) {\n  return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelContent,\n  selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]]\n});\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n  /**\n   * @param {?} accordion\n   * @param {?} _changeDetectorRef\n   * @param {?} _uniqueSelectionDispatcher\n   * @param {?} _viewContainerRef\n   * @param {?=} _document\n   * @param {?=} _animationMode\n   * @param {?=} defaultOptions\n   */\n  constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef,\n  // @breaking-change 8.0.0 _document and _animationMode to be made required\n  _document, _animationMode, defaultOptions) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this._viewContainerRef = _viewContainerRef;\n    this._animationMode = _animationMode;\n    this._hideToggle = false;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     */\n    this.afterExpand = new EventEmitter();\n    /**\n     * An event emitted after the body's collapse animation happens.\n     */\n    this.afterCollapse = new EventEmitter();\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     */\n    this._inputChanges = new Subject();\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     */\n    this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n    /**\n     * Stream of body animation done events.\n     */\n    this._bodyAnimationDone = new Subject();\n    this.accordion = accordion;\n    this._document = _document;\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      if (event.fromState !== 'void') {\n        if (event.toState === 'expanded') {\n          this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          this.afterCollapse.emit();\n        }\n      }\n    });\n    if (defaultOptions) {\n      this.hideToggle = defaultOptions.hideToggle;\n    }\n  }\n  /**\n   * Whether the toggle indicator should be hidden.\n   * @return {?}\n   */\n  get hideToggle() {\n    return this._hideToggle || this.accordion && this.accordion.hideToggle;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set hideToggle(value) {\n    this._hideToggle = coerceBooleanProperty(value);\n  }\n  /**\n   * Determines whether the expansion panel should have spacing between it and its siblings.\n   * @return {?}\n   */\n  _hasSpacing() {\n    if (this.accordion) {\n      // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n      // the [displayMode] input changes, the change detection will also cover the host bindings\n      // of this expansion panel.\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n    }\n    return false;\n  }\n  /**\n   * Gets the expanded state string.\n   * @return {?}\n   */\n  _getExpandedState() {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(startWith( /** @type {?} */null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    this._inputChanges.next(changes);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._bodyAnimationDone.complete();\n    this._inputChanges.complete();\n  }\n  /**\n   * Checks whether the expansion panel's content contains the currently-focused element.\n   * @return {?}\n   */\n  _containsFocus() {\n    if (this._body && this._document) {\n      /** @type {?} */\n      const focusedElement = this._document.activeElement;\n      /** @type {?} */\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n    return false;\n  }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) {\n  return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8));\n};\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanel,\n  selectors: [[\"mat-expansion-panel\"]],\n  contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    }\n  },\n  viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-expansion-panel\"],\n  hostVars: 6,\n  hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    hideToggle: \"hideToggle\"\n  },\n  outputs: {\n    opened: \"opened\",\n    closed: \"closed\",\n    expandedChange: \"expandedChange\",\n    afterExpand: \"afterExpand\",\n    afterCollapse: \"afterCollapse\"\n  },\n  exportAs: [\"matExpansionPanel\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([\n  // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n  // to the same accordion.\n  {\n    provide: MAT_ACCORDION,\n    useValue: ɵ0\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n  template: function MatExpansionPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n        return ctx._bodyAnimationDone.next($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    }\n  },\n  dependencies: [ɵngcc2.CdkPortalOutlet],\n  styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.bodyExpansion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [MAT_ACCORDION]\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: UniqueSelectionDispatcher\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n  }, {\n    type: Optional\n  }]\n}];\nMatExpansionPanel.propDecorators = {\n  hideToggle: [{\n    type: Input\n  }],\n  afterExpand: [{\n    type: Output\n  }],\n  afterCollapse: [{\n    type: Output\n  }],\n  _lazyContent: [{\n    type: ContentChild,\n    args: [MatExpansionPanelContent]\n  }],\n  _body: [{\n    type: ViewChild,\n    args: ['body']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled', 'expanded'],\n      outputs: ['opened', 'closed', 'expandedChange'],\n      animations: [matExpansionAnimations.bodyExpansion],\n      providers: [\n      // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: ɵ0\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      },\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [MAT_ACCORDION]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    afterExpand: [{\n      type: Output\n    }],\n    afterCollapse: [{\n      type: Output\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }],\n    _body: [{\n      type: ViewChild,\n      args: ['body']\n    }]\n  });\n})();\nclass MatExpansionPanelActionRow {}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) {\n  return new (t || MatExpansionPanelActionRow)();\n};\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelActionRow,\n  selectors: [[\"mat-action-row\"]],\n  hostAttrs: [1, \"mat-action-row\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n  /**\n   * @param {?} panel\n   * @param {?} _element\n   * @param {?} _focusMonitor\n   * @param {?} _changeDetectorRef\n   * @param {?=} defaultOptions\n   */\n  constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n    this.panel = panel;\n    this._element = _element;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parentChangeSubscription = Subscription.EMPTY;\n    /** @type {?} */\n    const accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(changes => !!changes['hideToggle'])) : EMPTY;\n    // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n    this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['disabled'])))).subscribe(() => this._changeDetectorRef.markForCheck());\n    // Avoids focus being lost if the panel contained the focused element and was closed.\n    panel.closed.pipe(filter(() => panel._containsFocus())).subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n    _focusMonitor.monitor(_element).subscribe(origin => {\n      if (origin && panel.accordion) {\n        panel.accordion._handleHeaderFocus(this);\n      }\n    });\n    if (defaultOptions) {\n      this.expandedHeight = defaultOptions.expandedHeight;\n      this.collapsedHeight = defaultOptions.collapsedHeight;\n    }\n  }\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * \\@docs-private\n   * @return {?}\n   */\n  get disabled() {\n    return this.panel.disabled;\n  }\n  /**\n   * Toggles the expanded state of the panel.\n   * @return {?}\n   */\n  _toggle() {\n    this.panel.toggle();\n  }\n  /**\n   * Gets whether the panel is expanded.\n   * @return {?}\n   */\n  _isExpanded() {\n    return this.panel.expanded;\n  }\n  /**\n   * Gets the expanded state string of the panel.\n   * @return {?}\n   */\n  _getExpandedState() {\n    return this.panel._getExpandedState();\n  }\n  /**\n   * Gets the panel id.\n   * @return {?}\n   */\n  _getPanelId() {\n    return this.panel.id;\n  }\n  /**\n   * Gets whether the expand indicator should be shown.\n   * @return {?}\n   */\n  _showToggle() {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n  /**\n   * Handle keydown event calling to toggle() if appropriate.\n   * @param {?} event\n   * @return {?}\n   */\n  _keydown(event) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._toggle();\n        }\n        break;\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n        return;\n    }\n  }\n  /**\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\n   * \\@docs-private\n   * @param {?=} origin Origin of the action that triggered the focus.\n   * @return {?}\n   */\n  focus(origin = 'program') {\n    this._focusMonitor.focusVia(this._element, origin);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) {\n  return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8));\n};\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanelHeader,\n  selectors: [[\"mat-expansion-panel-header\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"],\n  hostVars: 14,\n  hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n        return ctx._toggle();\n      })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    }\n  },\n  inputs: {\n    expandedHeight: \"expandedHeight\",\n    collapsedHeight: \"collapsedHeight\"\n  },\n  ngContentSelectors: _c6,\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]],\n  template: function MatExpansionPanelHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c5);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    }\n  },\n  dependencies: [ɵngcc4.NgIf],\n  styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [{\n  type: MatExpansionPanel,\n  decorators: [{\n    type: Host\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: FocusMonitor\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n  }, {\n    type: Optional\n  }]\n}];\nMatExpansionPanelHeader.propDecorators = {\n  expandedHeight: [{\n    type: Input\n  }],\n  collapsedHeight: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight],\n      host: {\n        'class': 'mat-expansion-panel-header',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)',\n        '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n      },\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"]\n    }]\n  }], function () {\n    return [{\n      type: MatExpansionPanel,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc3.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) {\n  return new (t || MatExpansionPanelDescription)();\n};\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelDescription,\n  selectors: [[\"mat-panel-description\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-description\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) {\n  return new (t || MatExpansionPanelTitle)();\n};\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelTitle,\n  selectors: [[\"mat-panel-title\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-title\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n  constructor() {\n    super(...arguments);\n    this._hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n    this.displayMode = 'default';\n  }\n  /**\n   * Whether the expansion indicator should be hidden.\n   * @return {?}\n   */\n  get hideToggle() {\n    return this._hideToggle;\n  }\n  /**\n   * @param {?} show\n   * @return {?}\n   */\n  set hideToggle(show) {\n    this._hideToggle = coerceBooleanProperty(show);\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this._headers).withWrap();\n  }\n  /**\n   * Handles keyboard events coming in from the panel headers.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleHeaderKeydown(event) {\n    const {\n      keyCode\n    } = event;\n    /** @type {?} */\n    const manager = this._keyManager;\n    if (keyCode === HOME) {\n      manager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      manager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * @param {?} header\n   * @return {?}\n   */\n  _handleHeaderFocus(header) {\n    this._keyManager.updateActiveItem(header);\n  }\n}\nMatAccordion.ɵfac = /*@__PURE__*/function () {\n  let ɵMatAccordion_BaseFactory;\n  return function MatAccordion_Factory(t) {\n    return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion);\n  };\n}();\nMatAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatAccordion,\n  selectors: [[\"mat-accordion\"]],\n  contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-accordion\"],\n  inputs: {\n    multi: \"multi\",\n    displayMode: \"displayMode\",\n    hideToggle: \"hideToggle\"\n  },\n  exportAs: [\"matAccordion\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatAccordion.propDecorators = {\n  _headers: [{\n    type: ContentChildren,\n    args: [MatExpansionPanelHeader, {\n      descendants: true\n    }]\n  }],\n  hideToggle: [{\n    type: Input\n  }],\n  displayMode: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      inputs: ['multi'],\n      providers: [{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }],\n      host: {\n        class: 'mat-accordion'\n      }\n    }]\n  }], null, {\n    displayMode: [{\n      type: Input\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _headers: [{\n      type: ContentChildren,\n      args: [MatExpansionPanelHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) {\n  return new (t || MatExpansionModule)();\n};\nMatExpansionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatExpansionModule\n});\nMatExpansionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, CdkAccordionModule, PortalModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, CdkAccordionModule, PortalModule],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      declarations: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, {\n    declarations: function () {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    },\n    imports: function () {\n      return [CommonModule, CdkAccordionModule, PortalModule];\n    },\n    exports: function () {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatExpansionModule, MatAccordion, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations };","map":{"version":3,"names":["InjectionToken","Directive","TemplateRef","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","EventEmitter","ElementRef","Input","Inject","Optional","Output","SkipSelf","ViewContainerRef","ViewEncapsulation","ViewChild","Host","ContentChildren","NgModule","animate","animateChild","group","state","style","transition","trigger","query","CdkAccordionItem","CdkAccordion","CdkAccordionModule","coerceBooleanProperty","UniqueSelectionDispatcher","TemplatePortal","PortalModule","DOCUMENT","CommonModule","ANIMATION_MODULE_TYPE","Subject","merge","Subscription","EMPTY","filter","startWith","take","distinctUntilChanged","FocusMonitor","FocusKeyManager","ENTER","SPACE","hasModifierKey","HOME","END","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","_c3","a0","a1","collapsedHeight","expandedHeight","_c4","value","params","MatExpansionPanelHeader_span_4_Template","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","_getExpandedState","_c5","_c6","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","height","optional","bodyExpansion","visibility","MatExpansionPanelContent","constructor","_template","ɵfac","MatExpansionPanelContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","args","selector","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","ɵ0","undefined","MatExpansionPanel","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","subscribe","event","emit","hideToggle","_hasSpacing","expanded","displayMode","ngAfterContentInit","_lazyContent","opened","_portal","ngOnChanges","changes","next","ngOnDestroy","complete","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","inputs","disabled","outputs","closed","expandedChange","exportAs","features","ɵɵProvidersFeature","provide","useValue","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵlistener","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","ɵɵtemplate","ɵɵelementEnd","ɵɵadvance","id","ɵɵattribute","dependencies","CdkPortalOutlet","styles","encapsulation","data","animation","changeDetection","decorators","String","propDecorators","None","OnPush","animations","providers","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","_stateChanges","markForCheck","focusVia","monitor","origin","_handleHeaderFocus","_toggle","toggle","_isExpanded","_getPanelId","_showToggle","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","unsubscribe","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","ɵɵsyntheticHostProperty","ɵɵpureFunction2","MatExpansionPanelHeader_Template","NgIf","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","show","_keyManager","_headers","withWrap","manager","setFirstItemActive","setLastItemActive","onKeydown","header","updateActiveItem","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","multi","useExisting","descendants","MatExpansionModule","MatExpansionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/Dineshkumar_Thangave/OneDrive - EPAM/Fun tasks/angulartaskone/node_modules/@angular/material/__ivy_ngcc__/esm2015/expansion.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, Host, ContentChildren, NgModule } from '@angular/core';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge, Subscription, EMPTY } from 'rxjs';\nimport { filter, startWith, take, distinctUntilChanged } from 'rxjs/operators';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey, HOME, END } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     * @param {?=} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, \n    // @breaking-change 8.0.0 _document and _animationMode to be made required\n    _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n            // the [displayMode] input changes, the change detection will also cover the host bindings\n            // of this expansion panel.\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body && this._document) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, dependencies: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'expanded'], outputs: ['opened', 'closed', 'expandedChange'], animations: [matExpansionAnimations.bodyExpansion], providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ], host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                }, styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!changes['hideToggle'])) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['disabled']))))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        _focusMonitor.monitor(_element).subscribe(origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        });\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        this.panel.toggle();\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @return {?}\n     */\n    focus(origin = 'program') {\n        this._focusMonitor.focusVia(this._element, origin);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"], hostVars: 14, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, dependencies: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel-header', template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ], host: {\n                    'class': 'mat-expansion-panel-header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                }, styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"] }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this._headers).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = /*@__PURE__*/ function () { let ɵMatAccordion_BaseFactory; return function MatAccordion_Factory(t) { return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion); }; }();\nMatAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], inputs: { multi: \"multi\", displayMode: \"displayMode\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule, CdkAccordionModule, PortalModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatExpansionModule, MatAccordion, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}