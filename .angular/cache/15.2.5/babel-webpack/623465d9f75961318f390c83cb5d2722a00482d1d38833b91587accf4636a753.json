{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ContentChild, ContentChildren, Directive, ElementRef, Optional, ViewEncapsulation, ChangeDetectorRef, Attribute, EventEmitter, forwardRef, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { MatLine, setLines, mixinDisableRipple, MatCommonModule, MatLineModule, MatPseudoCheckboxModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { SPACE, ENTER, HOME, END, UP_ARROW, DOWN_ARROW, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nconst _c0 = [\"*\"];\nconst _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\";\nconst _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c4 = [\"text\"];\nconst _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisableRipple(MatListBase);\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n  constructor() {\n    super(...arguments);\n    /**\n     * Emits when the state of the list changes.\n     */\n    this._stateChanges = new Subject();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\nMatNavList.ɵfac = /*@__PURE__*/function () {\n  let ɵMatNavList_BaseFactory;\n  return function MatNavList_Factory(t) {\n    return (ɵMatNavList_BaseFactory || (ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList)))(t || MatNavList);\n  };\n}();\nMatNavList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatNavList,\n  selectors: [[\"mat-nav-list\"]],\n  hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"],\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matNavList\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatNavList_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  styles: [_c1],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n    type: Component,\n    args: [{\n      selector: 'mat-nav-list',\n      exportAs: 'matNavList',\n      host: {\n        'role': 'navigation',\n        'class': 'mat-nav-list mat-list-base'\n      },\n      template: \"<ng-content></ng-content>\",\n      inputs: ['disableRipple'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"]\n    }]\n  }], null, null);\n})();\nclass MatList extends _MatListMixinBase {\n  /**\n   * @deprecated _elementRef parameter to be made required.\n   * \\@breaking-change 8.0.0\n   * @param {?=} _elementRef\n   */\n  constructor(_elementRef) {\n    super();\n    this._elementRef = _elementRef;\n    /**\n     * Emits when the state of the list changes.\n     */\n    this._stateChanges = new Subject();\n    if (this._getListType() === 'action-list' && _elementRef) {\n      _elementRef.nativeElement.classList.add('mat-action-list');\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _getListType() {\n    /** @type {?} */\n    const elementRef = this._elementRef;\n    // @breaking-change 8.0.0 Remove null check once _elementRef is a required param.\n    if (elementRef) {\n      /** @type {?} */\n      const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n      if (nodeName === 'mat-list') {\n        return 'list';\n      }\n      if (nodeName === 'mat-action-list') {\n        return 'action-list';\n      }\n    }\n    return null;\n  }\n  /**\n   * @return {?}\n   */\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\nMatList.ɵfac = function MatList_Factory(t) {\n  return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nMatList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatList,\n  selectors: [[\"mat-list\"], [\"mat-action-list\"]],\n  hostAttrs: [1, \"mat-list\", \"mat-list-base\"],\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matList\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatList_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  styles: [_c1],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatList.ctorParameters = () => [{\n  type: ElementRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatList, [{\n    type: Component,\n    args: [{\n      selector: 'mat-list, mat-action-list',\n      exportAs: 'matList',\n      template: \"<ng-content></ng-content>\",\n      host: {\n        'class': 'mat-list mat-list-base'\n      },\n      inputs: ['disableRipple'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) {\n  return new (t || MatListAvatarCssMatStyler)();\n};\nMatListAvatarCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatListAvatarCssMatStyler,\n  selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]],\n  hostAttrs: [1, \"mat-list-avatar\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-list-avatar], [matListAvatar]',\n      host: {\n        'class': 'mat-list-avatar'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) {\n  return new (t || MatListIconCssMatStyler)();\n};\nMatListIconCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatListIconCssMatStyler,\n  selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]],\n  hostAttrs: [1, \"mat-list-icon\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-list-icon], [matListIcon]',\n      host: {\n        'class': 'mat-list-icon'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) {\n  return new (t || MatListSubheaderCssMatStyler)();\n};\nMatListSubheaderCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatListSubheaderCssMatStyler,\n  selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]],\n  hostAttrs: [1, \"mat-subheader\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-subheader], [matSubheader]',\n      host: {\n        'class': 'mat-subheader'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n  /**\n   * @param {?} _element\n   * @param {?=} navList\n   * @param {?=} list\n   * @param {?=} _changeDetectorRef\n   */\n  constructor(_element, navList, list,\n  // @breaking-change 8.0.0 `_changeDetectorRef` to be made into a required parameter.\n  _changeDetectorRef) {\n    super();\n    this._element = _element;\n    this._isInteractiveList = false;\n    this._destroyed = new Subject();\n    this._isInteractiveList = !!(navList || list && list._getListType() === 'action-list');\n    this._list = navList || list;\n    // If no type attributed is specified for <button>, set it to \"button\".\n    // If a type attribute is already specified, do nothing.\n    /** @type {?} */\n    const element = this._getHostElement();\n    if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n      element.setAttribute('type', 'button');\n    }\n    // @breaking-change 8.0.0 Remove null check for _changeDetectorRef.\n    if (this._list && _changeDetectorRef) {\n      // React to changes in the state of the parent list since\n      // some of the item's properties depend on it (e.g. `disableRipple`).\n      this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        _changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Whether this list item should show a ripple effect when clicked.\n   * @return {?}\n   */\n  _isRippleDisabled() {\n    return !this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple);\n  }\n  /**\n   * Retrieves the DOM element of the component host.\n   * @return {?}\n   */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) {\n  return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nMatListItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatListItem,\n  selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]],\n  contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-list-item\"],\n  hostVars: 4,\n  hostBindings: function MatListItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matListItem\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c3,\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]],\n  template: function MatListItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c2);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelement(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(5, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    }\n  },\n  dependencies: [ɵngcc1.MatRipple],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatListItem.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: MatNavList,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: MatList,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\nMatListItem.propDecorators = {\n  _lines: [{\n    type: ContentChildren,\n    args: [MatLine]\n  }],\n  _avatar: [{\n    type: ContentChild,\n    args: [MatListAvatarCssMatStyler]\n  }],\n  _icon: [{\n    type: ContentChild,\n    args: [MatListIconCssMatStyler]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n    type: Component,\n    args: [{\n      selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n      exportAs: 'matListItem',\n      host: {\n        'class': 'mat-list-item',\n        // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n        '[class.mat-list-item-avatar]': '_avatar || _icon',\n        '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n      },\n      inputs: ['disableRipple'],\n      template: \"<div class=\\\"mat-list-item-content\\\"><div class=\\\"mat-list-item-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content><div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: MatNavList,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: MatList,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    _lines: [{\n      type: ContentChildren,\n      args: [MatLine]\n    }],\n    _avatar: [{\n      type: ContentChild,\n      args: [MatListAvatarCssMatStyler]\n    }],\n    _icon: [{\n      type: ContentChild,\n      args: [MatListIconCssMatStyler]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSelectionList),\n  multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n  /**\n   * @param {?} source\n   * @param {?} option\n   */\n  constructor(source, option) {\n    this.source = source;\n    this.option = option;\n  }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n  /**\n   * @param {?} _element\n   * @param {?} _changeDetector\n   * @param {?} selectionList\n   */\n  constructor(_element, _changeDetector, selectionList) {\n    super();\n    this._element = _element;\n    this._changeDetector = _changeDetector;\n    this.selectionList = selectionList;\n    this._selected = false;\n    this._disabled = false;\n    this._hasFocus = false;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     */\n    this.checkboxPosition = 'after';\n  }\n  /**\n   * Value of the option\n   * @return {?}\n   */\n  get value() {\n    return this._value;\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n  set value(newValue) {\n    if (this.selected && newValue !== this.value) {\n      this.selected = false;\n    }\n    this._value = newValue;\n  }\n  /**\n   * Whether the option is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return this._disabled || this.selectionList && this.selectionList.disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    /** @type {?} */\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetector.markForCheck();\n    }\n  }\n  /**\n   * Whether the option is selected.\n   * @return {?}\n   */\n  get selected() {\n    return this.selectionList.selectedOptions.isSelected(this);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set selected(value) {\n    /** @type {?} */\n    const isSelected = coerceBooleanProperty(value);\n    if (isSelected !== this._selected) {\n      this._setSelected(isSelected);\n      this.selectionList._reportValueChange();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    // List options that are selected at initialization can't be reported properly to the form\n    // control. This is because it takes some time until the selection-list knows about all\n    // available options. Also it can happen that the ControlValueAccessor has an initial value\n    // that should be used instead. Deferring the value change report to the next tick ensures\n    // that the form control value is not being overwritten.\n    /** @type {?} */\n    const wasSelected = this._selected;\n    Promise.resolve().then(() => {\n      if (this._selected || wasSelected) {\n        this.selected = true;\n        this._changeDetector.markForCheck();\n      }\n    });\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this.selected) {\n      // We have to delay this until the next tick in order\n      // to avoid changed after checked errors.\n      Promise.resolve().then(() => this.selected = false);\n    }\n    /** @type {?} */\n    const hadFocus = this._hasFocus;\n    /** @type {?} */\n    const newActiveItem = this.selectionList._removeOptionFromList(this);\n    // Only move focus if this option was focused at the time it was destroyed.\n    if (hadFocus && newActiveItem) {\n      newActiveItem.focus();\n    }\n  }\n  /**\n   * Toggles the selection state of the option.\n   * @return {?}\n   */\n  toggle() {\n    this.selected = !this.selected;\n  }\n  /**\n   * Allows for programmatic focusing of the option.\n   * @return {?}\n   */\n  focus() {\n    this._element.nativeElement.focus();\n  }\n  /**\n   * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n   * \\@docs-private\n   * @return {?}\n   */\n  getLabel() {\n    return this._text ? this._text.nativeElement.textContent || '' : '';\n  }\n  /**\n   * Whether this list item should show a ripple effect when clicked.\n   * @return {?}\n   */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n  }\n  /**\n   * @return {?}\n   */\n  _handleClick() {\n    if (!this.disabled) {\n      this.toggle();\n      // Emit a change event if the selected state of the option changed through user interaction.\n      this.selectionList._emitChangeEvent(this);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _handleFocus() {\n    this.selectionList._setFocusedOption(this);\n    this._hasFocus = true;\n  }\n  /**\n   * @return {?}\n   */\n  _handleBlur() {\n    this.selectionList._onTouched();\n    this._hasFocus = false;\n  }\n  /**\n   * Retrieves the DOM element of the component host.\n   * @return {?}\n   */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  /**\n   * Sets the selected state of the option. Returns whether the value has changed.\n   * @param {?} selected\n   * @return {?}\n   */\n  _setSelected(selected) {\n    if (selected === this._selected) {\n      return false;\n    }\n    this._selected = selected;\n    if (selected) {\n      this.selectionList.selectedOptions.select(this);\n    } else {\n      this.selectionList.selectedOptions.deselect(this);\n    }\n    this._changeDetector.markForCheck();\n    return true;\n  }\n  /**\n   * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n   * used to trigger an update of the list option if the disabled state of the selection list\n   * changed.\n   * @return {?}\n   */\n  _markForCheck() {\n    this._changeDetector.markForCheck();\n  }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) {\n  return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSelectionList)));\n};\nMatListOption.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatListOption,\n  selectors: [[\"mat-list-option\"]],\n  contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    }\n  },\n  viewQuery: function MatListOption_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"option\", \"tabindex\", \"-1\", 1, \"mat-list-item\", \"mat-list-option\"],\n  hostVars: 6,\n  hostBindings: function MatListOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() {\n        return ctx._handleFocus();\n      })(\"blur\", function MatListOption_blur_HostBindingHandler() {\n        return ctx._handleBlur();\n      })(\"click\", function MatListOption_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\",\n    checkboxPosition: \"checkboxPosition\",\n    value: \"value\",\n    selected: \"selected\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matListOption\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c6,\n  decls: 7,\n  vars: 6,\n  consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\"], [1, \"mat-list-text\"], [\"text\", \"\"]],\n  template: function MatListOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c5);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelement(1, \"div\", 1)(2, \"mat-pseudo-checkbox\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵprojection(5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"state\", ctx.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx.disabled);\n    }\n  },\n  dependencies: [ɵngcc1.MatRipple, ɵngcc1.MatPseudoCheckbox],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatListOption.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: MatSelectionList,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatSelectionList)]\n  }]\n}];\nMatListOption.propDecorators = {\n  _avatar: [{\n    type: ContentChild,\n    args: [MatListAvatarCssMatStyler]\n  }],\n  _icon: [{\n    type: ContentChild,\n    args: [MatListIconCssMatStyler]\n  }],\n  _lines: [{\n    type: ContentChildren,\n    args: [MatLine]\n  }],\n  _text: [{\n    type: ViewChild,\n    args: ['text']\n  }],\n  checkboxPosition: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-list-option',\n      exportAs: 'matListOption',\n      inputs: ['disableRipple'],\n      host: {\n        'role': 'option',\n        'class': 'mat-list-item mat-list-option',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()',\n        'tabindex': '-1',\n        '[class.mat-list-item-disabled]': 'disabled',\n        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n        '[attr.aria-selected]': 'selected.toString()',\n        '[attr.aria-disabled]': 'disabled.toString()'\n      },\n      template: \"<div class=\\\"mat-list-item-content\\\" [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\"><div mat-ripple class=\\\"mat-list-item-ripple\\\" [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><mat-pseudo-checkbox [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatSelectionList,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatSelectionList)]\n      }]\n    }];\n  }, {\n    checkboxPosition: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    _avatar: [{\n      type: ContentChild,\n      args: [MatListAvatarCssMatStyler]\n    }],\n    _icon: [{\n      type: ContentChild,\n      args: [MatListIconCssMatStyler]\n    }],\n    _lines: [{\n      type: ContentChildren,\n      args: [MatLine]\n    }],\n    _text: [{\n      type: ViewChild,\n      args: ['text']\n    }]\n  });\n})();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n  /**\n   * @param {?} _element\n   * @param {?} tabIndex\n   */\n  constructor(_element, tabIndex) {\n    super();\n    this._element = _element;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     */\n    this.selectionChange = new EventEmitter();\n    /**\n     * Tabindex of the selection list.\n     */\n    this.tabIndex = 0;\n    this._disabled = false;\n    /**\n     * The currently selected options.\n     */\n    this.selectedOptions = new SelectionModel(true);\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     */\n    this._onChange = _ => {};\n    /**\n     * Subscription to sync value changes in the SelectionModel back to the SelectionList.\n     */\n    this._modelChanges = Subscription.EMPTY;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     */\n    this._onTouched = () => {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n  /**\n   * Whether the selection list is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n    // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n    // changed its state. Since we know that a change to `disabled` property of the list affects\n    // the state of the options, we manually mark each option for check.\n    this._markOptionsForCheck();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this.options).withWrap().withTypeAhead()\n    // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n    // screenreader users, that allows reading the different options of the list.\n    .skipPredicate(() => false).withAllowedModifierKeys(['shiftKey']);\n    if (this._tempValues) {\n      this._setOptionsFromValues(this._tempValues);\n      this._tempValues = null;\n    }\n    // Sync external changes to the model back to the options.\n    this._modelChanges = this.selectedOptions.onChange.subscribe(event => {\n      if (event.added) {\n        for (let item of event.added) {\n          item.selected = true;\n        }\n      }\n      if (event.removed) {\n        for (let item of event.removed) {\n          item.selected = false;\n        }\n      }\n    });\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    /** @type {?} */\n    const disableRippleChanges = changes.disableRipple;\n    if (disableRippleChanges && !disableRippleChanges.firstChange) {\n      this._markOptionsForCheck();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._modelChanges.unsubscribe();\n  }\n  /**\n   * Focuses the selection list.\n   * @return {?}\n   */\n  focus() {\n    this._element.nativeElement.focus();\n  }\n  /**\n   * Selects all of the options.\n   * @return {?}\n   */\n  selectAll() {\n    this._setAllOptionsSelected(true);\n  }\n  /**\n   * Deselects all of the options.\n   * @return {?}\n   */\n  deselectAll() {\n    this._setAllOptionsSelected(false);\n  }\n  /**\n   * Sets the focused option of the selection-list.\n   * @param {?} option\n   * @return {?}\n   */\n  _setFocusedOption(option) {\n    this._keyManager.updateActiveItem(option);\n  }\n  /**\n   * Removes an option from the selection list and updates the active item.\n   * @param {?} option\n   * @return {?} Currently-active item.\n   */\n  _removeOptionFromList(option) {\n    /** @type {?} */\n    const optionIndex = this._getOptionIndex(option);\n    if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n      // Check whether the option is the last item\n      if (optionIndex > 0) {\n        this._keyManager.updateActiveItem(optionIndex - 1);\n      } else if (optionIndex === 0 && this.options.length > 1) {\n        this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n      }\n    }\n    return this._keyManager.activeItem;\n  }\n  /**\n   * Passes relevant key presses to our key manager.\n   * @param {?} event\n   * @return {?}\n   */\n  _keydown(event) {\n    /** @type {?} */\n    const keyCode = event.keyCode;\n    /** @type {?} */\n    const manager = this._keyManager;\n    /** @type {?} */\n    const previousFocusIndex = manager.activeItemIndex;\n    /** @type {?} */\n    const hasModifier = hasModifierKey(event);\n    switch (keyCode) {\n      case SPACE:\n      case ENTER:\n        if (!hasModifier) {\n          this._toggleFocusedOption();\n          // Always prevent space from scrolling the page since the list has focus\n          event.preventDefault();\n        }\n        break;\n      case HOME:\n      case END:\n        if (!hasModifier) {\n          keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n          event.preventDefault();\n        }\n        break;\n      case A:\n        if (hasModifierKey(event, 'ctrlKey')) {\n          this.options.find(option => !option.selected) ? this.selectAll() : this.deselectAll();\n          event.preventDefault();\n        }\n        break;\n      default:\n        manager.onKeydown(event);\n    }\n    if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey && manager.activeItemIndex !== previousFocusIndex) {\n      this._toggleFocusedOption();\n    }\n  }\n  /**\n   * Reports a value change to the ControlValueAccessor\n   * @return {?}\n   */\n  _reportValueChange() {\n    if (this.options) {\n      this._onChange(this._getSelectedOptionValues());\n    }\n  }\n  /**\n   * Emits a change event if the selected state of an option changed.\n   * @param {?} option\n   * @return {?}\n   */\n  _emitChangeEvent(option) {\n    this.selectionChange.emit(new MatSelectionListChange(this, option));\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} values\n   * @return {?}\n   */\n  writeValue(values) {\n    if (this.options) {\n      this._setOptionsFromValues(values || []);\n    } else {\n      this._tempValues = values;\n    }\n  }\n  /**\n   * Implemented as a part of ControlValueAccessor.\n   * @param {?} isDisabled\n   * @return {?}\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Sets the selected options based on the specified values.\n   * @private\n   * @param {?} values\n   * @return {?}\n   */\n  _setOptionsFromValues(values) {\n    this.options.forEach(option => option._setSelected(false));\n    values.forEach(value => {\n      /** @type {?} */\n      const correspondingOption = this.options.find(option => {\n        // Skip options that are already in the model. This allows us to handle cases\n        // where the same primitive value is selected multiple times.\n        if (option.selected) {\n          return false;\n        }\n        return this.compareWith ? this.compareWith(option.value, value) : option.value === value;\n      });\n      if (correspondingOption) {\n        correspondingOption._setSelected(true);\n      }\n    });\n  }\n  /**\n   * Returns the values of the selected options.\n   * @private\n   * @return {?}\n   */\n  _getSelectedOptionValues() {\n    return this.options.filter(option => option.selected).map(option => option.value);\n  }\n  /**\n   * Toggles the state of the currently focused option if enabled.\n   * @private\n   * @return {?}\n   */\n  _toggleFocusedOption() {\n    /** @type {?} */\n    let focusedIndex = this._keyManager.activeItemIndex;\n    if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n      /** @type {?} */\n      let focusedOption = this.options.toArray()[focusedIndex];\n      if (focusedOption && !focusedOption.disabled) {\n        focusedOption.toggle();\n        // Emit a change event because the focused option changed its state through user\n        // interaction.\n        this._emitChangeEvent(focusedOption);\n      }\n    }\n  }\n  /**\n   * Sets the selected state on all of the options\n   * and emits an event if anything changed.\n   * @private\n   * @param {?} isSelected\n   * @return {?}\n   */\n  _setAllOptionsSelected(isSelected) {\n    // Keep track of whether anything changed, because we only want to\n    // emit the changed event when something actually changed.\n    /** @type {?} */\n    let hasChanged = false;\n    this.options.forEach(option => {\n      if (option._setSelected(isSelected)) {\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      this._reportValueChange();\n    }\n  }\n  /**\n   * Utility to ensure all indexes are valid.\n   * @private\n   * @param {?} index The index to be checked.\n   * @return {?} True if the index is valid for our list of options.\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this.options.length;\n  }\n  /**\n   * Returns the index of the specified list option.\n   * @private\n   * @param {?} option\n   * @return {?}\n   */\n  _getOptionIndex(option) {\n    return this.options.toArray().indexOf(option);\n  }\n  /**\n   * Marks all the options to be checked in the next change detection run.\n   * @private\n   * @return {?}\n   */\n  _markOptionsForCheck() {\n    if (this.options) {\n      this.options.forEach(option => option._markForCheck());\n    }\n  }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) {\n  return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'));\n};\nMatSelectionList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSelectionList,\n  selectors: [[\"mat-selection-list\"]],\n  contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    }\n  },\n  hostAttrs: [\"role\", \"listbox\", \"aria-multiselectable\", \"true\", 1, \"mat-selection-list\", \"mat-list-base\"],\n  hostVars: 2,\n  hostBindings: function MatSelectionList_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function MatSelectionList_blur_HostBindingHandler() {\n        return ctx._onTouched();\n      })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString());\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    disabled: \"disabled\",\n    compareWith: \"compareWith\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  exportAs: [\"matSelectionList\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatSelectionList_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  styles: [_c1],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}];\nMatSelectionList.propDecorators = {\n  options: [{\n    type: ContentChildren,\n    args: [MatListOption, {\n      descendants: true\n    }]\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  compareWith: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n    type: Component,\n    args: [{\n      selector: 'mat-selection-list',\n      exportAs: 'matSelectionList',\n      inputs: ['disableRipple'],\n      host: {\n        'role': 'listbox',\n        '[tabIndex]': 'tabIndex',\n        'class': 'mat-selection-list mat-list-base',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_keydown($event)',\n        'aria-multiselectable': 'true',\n        '[attr.aria-disabled]': 'disabled.toString()'\n      },\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    selectionChange: [{\n      type: Output\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    options: [{\n      type: ContentChildren,\n      args: [MatListOption, {\n        descendants: true\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {}\nMatListModule.ɵfac = function MatListModule_Factory(t) {\n  return new (t || MatListModule)();\n};\nMatListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatListModule\n});\nMatListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule, MatLineModule, MatCommonModule, MatPseudoCheckboxModule, MatDividerModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n      exports: [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule, MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule],\n      declarations: [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, {\n    declarations: function () {\n      return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption];\n    },\n    imports: function () {\n      return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule];\n    },\n    exports: function () {\n      return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule, MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatListModule, MatListBase, _MatListMixinBase, MatListItemBase, _MatListItemMixinBase, MatNavList, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatListItem, MatSelectionListBase, _MatSelectionListMixinBase, MatListOptionBase, _MatListOptionMixinBase, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatSelectionListChange, MatListOption, MatSelectionList };","map":{"version":3,"names":["ChangeDetectionStrategy","Component","ContentChild","ContentChildren","Directive","ElementRef","Optional","ViewEncapsulation","ChangeDetectorRef","Attribute","EventEmitter","forwardRef","Inject","Input","Output","ViewChild","NgModule","MatLine","setLines","mixinDisableRipple","MatCommonModule","MatLineModule","MatPseudoCheckboxModule","MatRippleModule","Subject","Subscription","takeUntil","FocusKeyManager","coerceBooleanProperty","SelectionModel","SPACE","ENTER","HOME","END","UP_ARROW","DOWN_ARROW","A","hasModifierKey","NG_VALUE_ACCESSOR","CommonModule","MatDividerModule","ɵngcc0","ɵngcc1","_c0","_c1","_c2","_c3","_c4","_c5","_c6","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","constructor","arguments","_stateChanges","ngOnChanges","next","ngOnDestroy","complete","ɵfac","ɵMatNavList_BaseFactory","MatNavList_Factory","t","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","inputs","disableRipple","exportAs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","template","MatNavList_Template","rf","ctx","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","MatList","_elementRef","_getListType","nativeElement","classList","add","elementRef","nodeName","toLowerCase","MatList_Factory","ɵɵdirectiveInject","MatList_Template","ctorParameters","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","ɵdir","ɵɵdefineDirective","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","navList","list","_changeDetectorRef","_isInteractiveList","_destroyed","_list","element","_getHostElement","hasAttribute","setAttribute","pipe","subscribe","markForCheck","ngAfterContentInit","_lines","_isRippleDisabled","MatListItem_Factory","contentQueries","MatListItem_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_avatar","first","_icon","hostVars","hostBindings","MatListItem_HostBindings","ɵɵclassProp","consts","MatListItem_Template","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","dependencies","MatRipple","decorators","propDecorators","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","provide","useExisting","MatSelectionList","multi","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_disabled","_hasFocus","checkboxPosition","value","_value","newValue","selected","disabled","selectedOptions","isSelected","_setSelected","_reportValueChange","ngOnInit","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","toggle","getLabel","_text","textContent","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","_markForCheck","MatListOption_Factory","MatListOption_ContentQueries","viewQuery","MatListOption_Query","ɵɵviewQuery","MatListOption_HostBindings","ɵɵlistener","MatListOption_focus_HostBindingHandler","MatListOption_blur_HostBindingHandler","MatListOption_click_HostBindingHandler","ɵɵattribute","toString","MatListOption_Template","MatPseudoCheckbox","tabIndex","selectionChange","_onChange","_","_modelChanges","EMPTY","parseInt","_markOptionsForCheck","_keyManager","options","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_tempValues","_setOptionsFromValues","onChange","event","added","item","removed","changes","disableRippleChanges","firstChange","unsubscribe","selectAll","_setAllOptionsSelected","deselectAll","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","length","Math","min","activeItem","_keydown","keyCode","manager","previousFocusIndex","hasModifier","_toggleFocusedOption","preventDefault","setFirstItemActive","setLastItemActive","find","onKeydown","shiftKey","_getSelectedOptionValues","emit","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","forEach","correspondingOption","compareWith","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","hasChanged","index","indexOf","MatSelectionList_Factory","ɵɵinjectAttribute","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_blur_HostBindingHandler","MatSelectionList_keydown_HostBindingHandler","$event","ɵɵhostProperty","outputs","ɵɵProvidersFeature","MatSelectionList_Template","String","descendants","providers","MatListModule","MatListModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/Dineshkumar_Thangave/OneDrive - EPAM/Fun tasks/angulartaskone/node_modules/@angular/material/__ivy_ngcc__/esm2015/list.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ContentChild, ContentChildren, Directive, ElementRef, Optional, ViewEncapsulation, ChangeDetectorRef, Attribute, EventEmitter, forwardRef, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { MatLine, setLines, mixinDisableRipple, MatCommonModule, MatLineModule, MatPseudoCheckboxModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { SPACE, ENTER, HOME, END, UP_ARROW, DOWN_ARROW, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nconst _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\";\nconst _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c4 = [\"text\"];\nconst _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisableRipple(MatListBase);\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = /*@__PURE__*/ function () { let ɵMatNavList_BaseFactory; return function MatNavList_Factory(t) { return (ɵMatNavList_BaseFactory || (ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList)))(t || MatNavList); }; }();\nMatNavList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                }, template: \"<ng-content></ng-content>\", inputs: ['disableRipple'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"] }]\n    }], null, null); })();\nclass MatList extends _MatListMixinBase {\n    /**\n     * @deprecated _elementRef parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @param {?=} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list' && _elementRef) {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const elementRef = this._elementRef;\n        // @breaking-change 8.0.0 Remove null check once _elementRef is a required param.\n        if (elementRef) {\n            /** @type {?} */\n            const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n            if (nodeName === 'mat-list') {\n                return 'list';\n            }\n            if (nodeName === 'mat-action-list') {\n                return 'action-list';\n            }\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{ selector: 'mat-list, mat-action-list', exportAs: 'matList', template: \"<ng-content></ng-content>\", host: {\n                    'class': 'mat-list mat-list-base'\n                }, inputs: ['disableRipple'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?=} navList\n     * @param {?=} list\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_element, navList, list, \n    // @breaking-change 8.0.0 `_changeDetectorRef` to be made into a required parameter.\n    _changeDetectorRef) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        // @breaking-change 8.0.0 Remove null check for _changeDetectorRef.\n        if (this._list && _changeDetectorRef) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatListItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\"], hostVars: 4, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, dependencies: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine,] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\"><div class=\\\"mat-list-item-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content><div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n    }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        /** @type {?} */\n        const wasSelected = this._selected;\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSelectionList))); };\nMatListOption.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", \"tabindex\", \"-1\", 1, \"mat-list-item\", \"mat-list-option\"], hostVars: 6, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c6, decls: 7, vars: 6, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\"], [1, \"mat-list-text\"], [\"text\", \"\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1)(2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"state\", ctx.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx.disabled);\n    } }, dependencies: [ɵngcc1.MatRipple, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef(() => MatSelectionList),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine,] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{ selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    'tabindex': '-1',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\" [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\"><div mat-ripple class=\\\"mat-list-item-ripple\\\" [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><mat-pseudo-checkbox [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSelectionList)]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     */\n    constructor(_element, tabIndex) {\n        super();\n        this._element = _element;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         */\n        this.tabIndex = 0;\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(true);\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (_) => { };\n        /**\n         * Subscription to sync value changes in the SelectionModel back to the SelectionList.\n         */\n        this._modelChanges = Subscription.EMPTY;\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = () => { };\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange.subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes.disableRipple;\n        if (disableRippleChanges && !disableRippleChanges.firstChange) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n    /**\n     * Focuses the selection list.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            case A:\n                if (hasModifierKey(event, 'ctrlKey')) {\n                    this.options.find(option => !option.selected) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                manager.onKeydown(event);\n        }\n        if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this._getSelectedOptionValues());\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n        else {\n            this._tempValues = values;\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                if (option.selected) {\n                    return false;\n                }\n                return this.compareWith ? this.compareWith(option.value, value) : option.value === value;\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach(option => {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        });\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatSelectionList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", \"aria-multiselectable\", \"true\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 2, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatSelectionList_blur_HostBindingHandler() { return ctx._onTouched(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString());\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", disabled: \"disabled\", compareWith: \"compareWith\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', inputs: ['disableRipple'], host: {\n                    'role': 'listbox',\n                    '[tabIndex]': 'tabIndex',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    'aria-multiselectable': 'true',\n                    '[attr.aria-disabled]': 'disabled.toString()'\n                }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }], compareWith: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = function MatListModule_Factory(t) { return new (t || MatListModule)(); };\nMatListModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule, MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule,\n        MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatListModule, MatListBase, _MatListMixinBase, MatListItemBase, _MatListItemMixinBase, MatNavList, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatListItem, MatSelectionListBase, _MatSelectionListMixinBase, MatListOptionBase, _MatListOptionMixinBase, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatSelectionListChange, MatListOption, MatSelectionList };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}